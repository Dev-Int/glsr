build:
  nodes:
    analysis:
      tests:
        override:
          - php-scrutinizer-run --enable-security-analysis
      environment:
        docker: true
        php:
          version: 7.4
          ini:
            'date.timezone': 'Europe/Paris'

filter:
  paths:
    - 'server/src/*'
  excluded_paths:
    - 'server/tests/*'
    - 'server/*/Infrastructure/DoctrineMigrations/*'
  dependency_paths:
    - 'server/vendor/*'

checks:
  php:
    align_assignments: true
    argument_type_checks: true
    assignment_of_null_return: true
    avoid_closing_tag: true
    avoid_conflicting_incrementers: true
    avoid_duplicate_types: true
    avoid_fixme_comments: true
    avoid_length_functions_in_loops: true
    avoid_multiple_statements_on_same_line: true
    avoid_perl_style_comments: true
    avoid_superglobals: true
    avoid_todo_comments: true
    avoid_unnecessary_concatenation: true
    avoid_usage_of_logical_operators: true
    avoid_useless_overridden_methods: true
    blank_line_after_namespace_declaration: true
    closure_use_modifiable: true
    closure_use_not_conflicting: true
    code_rating: true
    deadlock_detection_in_loops: true
    deprecated_code_usage: true
    duplication: true
    encourage_shallow_comparison: true
    encourage_single_quotes: true
    fix_use_statements:
      remove_unused: true
      preserve_multiple: false
      preserve_blanklines: false
      order_alphabetically: true
    fix_line_ending: true
    fix_doc_comments: true
    foreach_traversable: true
    foreach_usable_as_reference: true
    function_in_camel_caps: true
    line_length:
      max_length: '120'
    method_calls_on_non_object: true
    missing_arguments: true
    more_specific_types_in_doc_comments: true
    naming_conventions:
      local_variable: '^[a-z][a-zA-Z0-9]*$'
      abstract_class_name: ^Abstract|Factory$
      utility_class_name: 'Utils?$'
      constant_name: '^[A-Z][A-Z0-9]*(?:_[A-Z0-9]+)*$'
      property_name: '^[a-z][a-zA-Z0-9]*$'
      method_name: '^(?:[a-z]|__)[a-zA-Z0-9]*$'
      parameter_name: '^[a-z][a-zA-Z0-9]*$'
      interface_name: '^[A-Z][a-zA-Z0-9]*Interface$'
      type_name: '^[A-Z][a-zA-Z0-9]*$'
      exception_name: '^[A-Z][a-zA-Z0-9]*Exception$'
      isser_method_name: '^(?:is|has|should|may|supports)'
    newline_at_end_of_file: true
    no_commented_out_code: true
    no_debug_code: true
    no_duplicate_arguments: true
    no_empty_statements: true
    no_error_suppression: true
    no_eval: true
    no_exit: true
    no_global_keyword: true
    no_goto: true
    no_long_variable_names:
      maximum: '20'
    no_short_open_tag: true
    return_doc_comments: true
    return_doc_comment_if_not_inferrable: true
    remove_extra_empty_lines: true
    prefer_while_loop_over_for_loop: true
    phpunit_assertions: true
    parameters_in_camelcaps: true
    parameter_doc_comments: true
    param_doc_comment_if_not_inferrable: true
    optional_parameters_at_the_end: true
    no_short_method_names:
      minimum: '3'
    properties_in_camelcaps: true
    no_short_variable_names:
      minimum: '3'
    encourage_postdec_operator: true

coding_style:
  php:
    spaces:
      around_operators:
        concatenation: false

    braces:
      classes_functions:
        class: new-line
        function: new-line
      if:
        opening: end-of-line
      for:
        opening: end-of-line
    upper_lower_casing:
      keywords:
        general: lower
      constants:
        true_false_null: lower
